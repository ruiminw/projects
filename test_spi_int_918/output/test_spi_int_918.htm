<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\test_spi_int_918.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\test_spi_int_918.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Fri Jan 13 17:58:17 2023
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
app_main &rArr; setup_peripherals &rArr; config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_ing91800.o(.text) referenced from startup_ing91800.o(RESET)
 <LI><a href="#[2]">__scatterload</a> from init.o(.text) referenced from startup_ing91800.o(.text)
 <LI><a href="#[3]">app_main</a> from main.o(.text.app_main) referenced from startup_ing91800.o(.text)
 <LI><a href="#[a]">app_timer1_callback</a> from main.o(.text.app_timer1_callback) referenced 2 times from main.o(.text.setup_peripherals)
 <LI><a href="#[9]">app_timer_callback</a> from main.o(.text.app_timer_callback) referenced 2 times from main.o(.text.setup_peripherals)
 <LI><a href="#[5]">cb_assertion</a> from main.o(.text.cb_assertion) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[4]">cb_hard_fault</a> from main.o(.text.cb_hard_fault) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[6]">cb_heap_out_of_mem</a> from main.o(.text.cb_heap_out_of_mem) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[7]">cb_putc</a> from main.o(.text.cb_putc) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[1]">main</a> from startup_ing91800.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[8]">spi0_isr</a> from main.o(.text.spi0_isr) referenced 2 times from main.o(.text.io_interf_setup_peripherals)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>platform_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_heap_out_of_mem
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_hard_fault
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_assertion
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer1_callback
</UL>

<P><STRONG><a name="[19]"></a>platform_set_evt_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[24]"></a>platform_set_irq_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[26]"></a>xTaskGetTickCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[25]"></a>xTimerCreate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[27]"></a>xTimerGenericCommand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[33]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[35]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[36]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[37]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[38]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_ing91800.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_ing91800.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e]"></a>GIO_SetDirection</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, peripheral_gpio.o(.text.GIO_SetDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GIO_SetDirection &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_MaskedWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[10]"></a>GIO_WriteValue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, peripheral_gpio.o(.text.GIO_WriteValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GIO_WriteValue &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_MaskedWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CS_Toggle
</UL>

<P><STRONG><a name="[22]"></a>PINCTRL_Pull</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, peripheral_pinctrl.o(.text.PINCTRL_Pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PINCTRL_Pull
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[11]"></a>PINCTRL_SelSpiDiIn</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, peripheral_pinctrl.o(.text.PINCTRL_SelSpiDiIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PINCTRL_SelSpiDiIn &rArr; PINCTRL_SelIn
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelIn
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[23]"></a>PINCTRL_SetPadMux</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, peripheral_pinctrl.o(.text.PINCTRL_SetPadMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PINCTRL_SetPadMux
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[13]"></a>SPI_CS_Toggle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(.text.SPI_CS_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPI_CS_Toggle &rArr; GIO_WriteValue &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_WriteValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_start
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[14]"></a>SPI_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(.text.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Init &rArr; apSSP_DeviceParametersSet
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_Initialize
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_DeviceParametersSet
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[21]"></a>SYSCTRL_ClearClkGateMulti</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClearClkGateMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SYSCTRL_ClearClkGateMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
</UL>

<P><STRONG><a name="[1e]"></a>UART_SendData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, peripheral_uart.o(.text.UART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[2c]"></a>apSSP_ClearInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, peripheral_ssp.o(.text.apSSP_ClearInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apSSP_ClearInt
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[32]"></a>apSSP_DeviceEnable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_DeviceEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_DeviceEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_start
</UL>

<P><STRONG><a name="[16]"></a>apSSP_DeviceParametersSet</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, peripheral_ssp.o(.text.apSSP_DeviceParametersSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apSSP_DeviceParametersSet
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[2f]"></a>apSSP_DeviceReceiveDisable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_DeviceReceiveDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_DeviceReceiveDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[31]"></a>apSSP_DeviceReceiveEnable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_DeviceReceiveEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_DeviceReceiveEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_start
</UL>

<P><STRONG><a name="[2b]"></a>apSSP_DeviceTransmitDisable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_DeviceTransmitDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_DeviceTransmitDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[30]"></a>apSSP_DeviceTransmitEnable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_DeviceTransmitEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_DeviceTransmitEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_start
</UL>

<P><STRONG><a name="[28]"></a>apSSP_GetIntRawStatus</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_GetIntRawStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_GetIntRawStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[15]"></a>apSSP_Initialize</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>

<P><STRONG><a name="[2d]"></a>apSSP_ReadFIFO</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, peripheral_ssp.o(.text.apSSP_ReadFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apSSP_ReadFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[2e]"></a>apSSP_RxFifoNotEmpty</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_RxFifoNotEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_RxFifoNotEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[29]"></a>apSSP_TxFifoNotFull</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_ssp.o(.text.apSSP_TxFifoNotFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apSSP_TxFifoNotFull
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[2a]"></a>apSSP_WriteFIFO</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, peripheral_ssp.o(.text.apSSP_WriteFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apSSP_WriteFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi0_isr
</UL>

<P><STRONG><a name="[18]"></a>apUART_BaudRateSet</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, peripheral_uart.o(.text.apUART_BaudRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>

<P><STRONG><a name="[1d]"></a>apUART_Check_TXFIFO_FULL</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_uart.o(.text.apUART_Check_TXFIFO_FULL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apUART_Check_TXFIFO_FULL
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[17]"></a>apUART_Initialize</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, peripheral_uart.o(.text.apUART_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
</UL>

<P><STRONG><a name="[3]"></a>app_main</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(.text.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_main &rArr; setup_peripherals &rArr; config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_evt_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>cb_putc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(.text.cb_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cb_putc &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_TXFIFO_FULL
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[1f]"></a>config_uart</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, main.o(.text.config_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[20]"></a>io_interf_setup_peripherals</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, main.o(.text.io_interf_setup_peripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = io_interf_setup_peripherals &rArr; SPI_Init &rArr; apSSP_DeviceParametersSet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelSpiDiIn
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_Pull
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_WriteValue
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_SetDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[1a]"></a>setup_peripherals</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, main.o(.text.setup_peripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = setup_peripherals &rArr; config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_interf_setup_peripherals
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[8]"></a>spi0_isr</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, main.o(.text.spi0_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = spi0_isr &rArr; SPI_CS_Toggle &rArr; GIO_WriteValue &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_WriteFIFO
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_TxFifoNotFull
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_RxFifoNotEmpty
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_ReadFIFO
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_GetIntRawStatus
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_DeviceTransmitDisable
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_DeviceReceiveDisable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_ClearInt
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CS_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.io_interf_setup_peripherals)
</UL>
<P><STRONG><a name="[1c]"></a>spi_send_data_start</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, main.o(.text.spi_send_data_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spi_send_data_start &rArr; SPI_CS_Toggle &rArr; GIO_WriteValue &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_DeviceTransmitEnable
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_DeviceReceiveEnable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apSSP_DeviceEnable
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CS_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_callback
</UL>

<P><STRONG><a name="[3a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a]"></a>app_timer1_callback</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, main.o(.text.app_timer1_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer1_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.setup_peripherals)
</UL>
<P><STRONG><a name="[9]"></a>app_timer_callback</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, main.o(.text.app_timer_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = app_timer_callback &rArr; spi_send_data_start &rArr; SPI_CS_Toggle &rArr; GIO_WriteValue &rArr; GIO_MaskedWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_data_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.setup_peripherals)
</UL>
<P><STRONG><a name="[5]"></a>cb_assertion</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, main.o(.text.cb_assertion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_assertion
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[4]"></a>cb_hard_fault</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(.text.cb_hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cb_hard_fault
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[6]"></a>cb_heap_out_of_mem</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(.text.cb_heap_out_of_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_heap_out_of_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[f]"></a>GIO_MaskedWrite</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, peripheral_gpio.o(.text.GIO_MaskedWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GIO_MaskedWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_WriteValue
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO_SetDirection
</UL>

<P><STRONG><a name="[12]"></a>PINCTRL_SelIn</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, peripheral_pinctrl.o(.text.PINCTRL_SelIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PINCTRL_SelIn
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelSpiDiIn
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
