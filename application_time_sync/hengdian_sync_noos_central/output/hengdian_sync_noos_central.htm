<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\hengdian_sync_noos_central.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\hengdian_sync_noos_central.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Mon Aug  1 09:46:15 2022
<BR><P>
<H3>Maximum Stack Usage =        208 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
user_packet_handler &rArr; user_msg_handler &rArr; initiate_if_needed &rArr; print_conn_state
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_ing91800.o(.text) referenced from startup_ing91800.o(RESET)
 <LI><a href="#[2]">__scatterload</a> from init.o(.text) referenced from startup_ing91800.o(.text)
 <LI><a href="#[3]">app_main</a> from main.o(.text.app_main) referenced from startup_ing91800.o(.text)
 <LI><a href="#[c]">app_timer_callback</a> from profile.o(.text.app_timer_callback) referenced 2 times from profile.o(.text.initiate_if_needed)
 <LI><a href="#[10]">att_read_callback</a> from profile.o(.text.att_read_callback) referenced 2 times from profile.o(.text.setup_profile)
 <LI><a href="#[11]">att_write_callback</a> from profile.o(.text.att_write_callback) referenced 2 times from profile.o(.text.setup_profile)
 <LI><a href="#[6]">cb_assertion</a> from main.o(.text.cb_assertion) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[5]">cb_hard_fault</a> from main.o(.text.cb_hard_fault) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[7]">cb_heap_out_of_mem</a> from main.o(.text.cb_heap_out_of_mem) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[a]">cb_putc</a> from main.o(.text.cb_putc) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[1e]">dummy_event_create</a> from noos_impl.o(.text.dummy_event_create) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[20]">dummy_event_set</a> from noos_impl.o(.text.dummy_event_set) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[1f]">dummy_event_wait</a> from noos_impl.o(.text.dummy_event_wait) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[23]">enter_critical</a> from noos_impl.o(.text.enter_critical) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[15]">fputc</a> from main.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[22]">free</a> from malloc.o(i.free) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[24]">leave_critical</a> from noos_impl.o(.text.leave_critical) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[1]">main</a> from startup_ing91800.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[21]">malloc</a> from malloc.o(i.malloc) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[25]">noos_start</a> from noos_impl.o(.text.noos_start) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[8]">on_deep_sleep_wakeup</a> from main.o(.text.on_deep_sleep_wakeup) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[d]">on_raw_packet_done</a> from time_sync.o(.text.on_raw_packet_done) referenced 2 times from time_sync.o(.text.internal_time_sync_init)
 <LI><a href="#[13]">output_notification_handler</a> from profile.o(.text.output_notification_handler) referenced 2 times from profile.o(.text.start_notify)
 <LI><a href="#[28]">pendsv_isr</a> from noos_impl.o(.text.pendsv_isr) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[9]">query_deep_sleep_allowed</a> from main.o(.text.query_deep_sleep_allowed) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[1b]">queue_create</a> from noos_impl.o(.text.queue_create) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[1d]">queue_recv_msg</a> from noos_impl.o(.text.queue_recv_msg) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[1c]">queue_send_msg</a> from noos_impl.o(.text.queue_send_msg) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[4]">setup_profile</a> from profile.o(.text.setup_profile) referenced 2 times from main.o(.text.app_main)
 <LI><a href="#[27]">svc_isr</a> from noos_impl.o(.text.svc_isr) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[1a]">task_create</a> from noos_impl.o(.text.task_create) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[26]">tick_isr</a> from noos_impl.o(.text.tick_isr) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[e]">timer1_isr</a> from main.o(.text.timer1_isr) referenced 2 times from main.o(.text.setup_peripherals)
 <LI><a href="#[f]">timer2_isr</a> from main.o(.text.timer2_isr) referenced 2 times from main.o(.text.setup_peripherals)
 <LI><a href="#[29]">timer_cb_0</a> from noos_impl.o(.text.timer_cb_0) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[2a]">timer_cb_1</a> from noos_impl.o(.text.timer_cb_1) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[2b]">timer_cb_2</a> from noos_impl.o(.text.timer_cb_2) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[2c]">timer_cb_3</a> from noos_impl.o(.text.timer_cb_3) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[2d]">timer_cb_4</a> from noos_impl.o(.text.timer_cb_4) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[2e]">timer_cb_5</a> from noos_impl.o(.text.timer_cb_5) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[2f]">timer_cb_6</a> from noos_impl.o(.text.timer_cb_6) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[30]">timer_cb_7</a> from noos_impl.o(.text.timer_cb_7) referenced from noos_impl.o(.data.sw_timers)
 <LI><a href="#[16]">timer_create</a> from noos_impl.o(.text.timer_create) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[19]">timer_delete</a> from noos_impl.o(.text.timer_delete) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[17]">timer_start</a> from noos_impl.o(.text.timer_start) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[18]">timer_stop</a> from noos_impl.o(.text.timer_stop) referenced from noos_impl.o(.rodata.driver)
 <LI><a href="#[b]">uart_driver_isr</a> from main.o(.text.uart_driver_isr) referenced 2 times from main.o(.text.config_comm_uart)
 <LI><a href="#[12]">user_packet_handler</a> from profile.o(.text.user_packet_handler) referenced 2 times from profile.o(.text.setup_profile)
 <LI><a href="#[14]">write_characteristic_descriptor_callback</a> from profile.o(.text.write_characteristic_descriptor_callback) referenced 2 times from profile.o(.text.start_notify)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6b]"></a>att_dispatch_client_request_can_send_now_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_schedule
</UL>

<P><STRONG><a name="[79]"></a>att_server_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[7b]"></a>att_server_register_packet_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[48]"></a>btstack_push_user_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_external_send_data
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_send_dev_sync_data
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_callback
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_time_sync_schedule
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_set_interval
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_send_data
</UL>

<P><STRONG><a name="[63]"></a>gap_add_whitelist</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
</UL>

<P><STRONG><a name="[62]"></a>gap_clear_white_lists</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
</UL>

<P><STRONG><a name="[8d]"></a>gap_create_connection_cancel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[65]"></a>gap_ext_create_connection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
</UL>

<P><STRONG><a name="[64]"></a>gap_set_ext_scan_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
</UL>

<P><STRONG><a name="[8e]"></a>gap_set_phy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[93]"></a>gap_set_random_device_address</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[8f]"></a>gap_update_connection_parameters</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[4c]"></a>gatt_client_get_mtu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_data
</UL>

<P><STRONG><a name="[96]"></a>gatt_client_is_ready</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[7e]"></a>gatt_client_listen_for_characteristic_value_updates</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_notify
</UL>

<P><STRONG><a name="[7c]"></a>gatt_client_register_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[7f]"></a>gatt_client_write_characteristic_descriptor_using_descriptor_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_notify
</UL>

<P><STRONG><a name="[4d]"></a>gatt_client_write_value_of_characteristic_without_response</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_data
</UL>

<P><STRONG><a name="[7a]"></a>hci_add_event_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[68]"></a>ll_raw_packet_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_init
</UL>

<P><STRONG><a name="[73]"></a>ll_raw_packet_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
</UL>

<P><STRONG><a name="[69]"></a>ll_raw_packet_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_init
</UL>

<P><STRONG><a name="[72]"></a>ll_raw_packet_set_tx_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
</UL>

<P><STRONG><a name="[92]"></a>ll_set_max_conn_number</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[74]"></a>platform_controller_run</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_recv_msg
</UL>

<P><STRONG><a name="[55]"></a>platform_get_us_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;came_sync_callback
</UL>

<P><STRONG><a name="[6f]"></a>platform_init_controller</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;noos_start
</UL>

<P><STRONG><a name="[57]"></a>platform_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_notify
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_conn_state
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_read_data
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;came_sync_callback
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_heap_out_of_mem
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_hard_fault
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_assertion
</UL>

<P><STRONG><a name="[87]"></a>platform_raise_assertion</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_create
</UL>

<P><STRONG><a name="[45]"></a>platform_set_evt_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[5d]"></a>platform_set_irq_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_comm_uart
</UL>

<P><STRONG><a name="[66]"></a>platform_set_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.m(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_delete
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
</UL>

<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[9f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[32]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[a4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_ing91800.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_ing91800.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>___aeabi_memcpy4$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_send_msg
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_recv_msg
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_external_send_data
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_send_dev_sync_data
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_send_data
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_recv_msg
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[ab]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ac]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[37]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[ae]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>PINCTRL_SelUartRxdIn</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, peripheral_pinctrl.o(.text.PINCTRL_SelUartRxdIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PINCTRL_SelUartRxdIn &rArr; PINCTRL_SelIn
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelIn
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_comm_uart
</UL>

<P><STRONG><a name="[5c]"></a>PINCTRL_SetPadMux</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, peripheral_pinctrl.o(.text.PINCTRL_SetPadMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PINCTRL_SetPadMux
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_comm_uart
</UL>

<P><STRONG><a name="[5b]"></a>SYSCTRL_ClearClkGateMulti</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, peripheral_sysctrl.o(.text.SYSCTRL_ClearClkGateMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SYSCTRL_ClearClkGateMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_comm_uart
</UL>

<P><STRONG><a name="[82]"></a>TMR_Enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_timer.o(.text.TMR_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TMR_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_enable
</UL>

<P><STRONG><a name="[85]"></a>TMR_IntClr</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_timer.o(.text.TMR_IntClr))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TMR_IntClr
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_isr
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_isr
</UL>

<P><STRONG><a name="[84]"></a>TMR_IntEnable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_timer.o(.text.TMR_IntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TMR_IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[81]"></a>TMR_Reload</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, peripheral_timer.o(.text.TMR_Reload))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TMR_Reload
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_enable
</UL>

<P><STRONG><a name="[80]"></a>TMR_SetCMP</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, peripheral_timer.o(.text.TMR_SetCMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_SetCMP
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_enable
</UL>

<P><STRONG><a name="[83]"></a>TMR_SetOpMode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, peripheral_timer.o(.text.TMR_SetOpMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_SetOpMode
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[59]"></a>UART_SendData</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, peripheral_uart.o(.text.UART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_send_data
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[44]"></a>apUART_BaudRateSet</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, peripheral_uart.o(.text.apUART_BaudRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>

<P><STRONG><a name="[8a]"></a>apUART_Check_RXFIFO_EMPTY</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_uart.o(.text.apUART_Check_RXFIFO_EMPTY))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apUART_Check_RXFIFO_EMPTY
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_read_data
</UL>

<P><STRONG><a name="[58]"></a>apUART_Check_TXFIFO_FULL</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, peripheral_uart.o(.text.apUART_Check_TXFIFO_FULL))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apUART_Check_TXFIFO_FULL
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_send_data
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>

<P><STRONG><a name="[88]"></a>apUART_Get_all_raw_int_stat</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, peripheral_uart.o(.text.apUART_Get_all_raw_int_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = apUART_Get_all_raw_int_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_isr
</UL>

<P><STRONG><a name="[43]"></a>apUART_Initialize</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, peripheral_uart.o(.text.apUART_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_BaudRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_comm_uart
</UL>

<P><STRONG><a name="[3]"></a>app_main</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, main.o(.text.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_main &rArr; setup_peripherals &rArr; config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_evt_callback
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_impl_get_driver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ing91800.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>app_timer_callback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, profile.o(.text.app_timer_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_timer_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.initiate_if_needed)
</UL>
<P><STRONG><a name="[49]"></a>ble_att_send_application_data</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, profile.o(.text.ble_att_send_application_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_att_send_application_data &rArr; ble_att_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[4b]"></a>ble_att_send_came_sync_data</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, profile.o(.text.ble_att_send_came_sync_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_att_send_came_sync_data &rArr; ble_att_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[4a]"></a>ble_att_send_data</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, profile.o(.text.ble_att_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_att_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_value_of_characteristic_without_response
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_mtu
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_time_sync_data
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_came_sync_data
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_application_data
</UL>

<P><STRONG><a name="[4e]"></a>ble_att_send_time_sync_data</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, profile.o(.text.ble_att_send_time_sync_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_att_send_time_sync_data &rArr; ble_att_send_data
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[4f]"></a>ble_external_send_data</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, profile.o(.text.ble_external_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_external_send_data &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_read_data
</UL>

<P><STRONG><a name="[51]"></a>ble_external_send_dev_sync_data</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, profile.o(.text.ble_external_send_dev_sync_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_external_send_dev_sync_data &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[52]"></a>ble_external_set_interval</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, profile.o(.text.ble_external_set_interval))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_external_set_interval
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_read_data
</UL>

<P><STRONG><a name="[53]"></a>came_sync_callback</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, time_sync.o(.text.came_sync_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = came_sync_callback &rArr; internal_time_sync_schedule &rArr; packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_get_us_time
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_all_peripheral_connected
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_schedule
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_read_data
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_isr
</UL>

<P><STRONG><a name="[a]"></a>cb_putc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(.text.cb_putc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cb_putc &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_TXFIFO_FULL
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[5e]"></a>config_uart</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, main.o(.text.config_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[5f]"></a>external_time_sync_schedule</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, time_sync.o(.text.external_time_sync_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = external_time_sync_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_isr
</UL>

<P><STRONG><a name="[15]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; cb_putc &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cb_putc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[60]"></a>initiate_if_needed</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, profile.o(.text.initiate_if_needed))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = initiate_if_needed &rArr; print_conn_state
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_conn_state
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_timer
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_ext_scan_enable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ext_create_connection
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_clear_white_lists
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_add_whitelist
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[67]"></a>internal_time_sync_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, time_sync.o(.text.internal_time_sync_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = internal_time_sync_init
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_raw_packet_set_param
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_raw_packet_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_profile
</UL>

<P><STRONG><a name="[56]"></a>internal_time_sync_schedule</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, time_sync.o(.text.internal_time_sync_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = internal_time_sync_schedule &rArr; packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_dispatch_client_request_can_send_now_event
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;came_sync_callback
</UL>

<P><STRONG><a name="[6d]"></a>internal_time_sync_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, time_sync.o(.text.internal_time_sync_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = internal_time_sync_stop &rArr; timer1_enable &rArr; TMR_SetCMP
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_isr
</UL>

<P><STRONG><a name="[54]"></a>is_all_peripheral_connected</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, profile.o(.text.is_all_peripheral_connected))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = is_all_peripheral_connected &rArr; total_conn_num
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;total_conn_num
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;came_sync_callback
</UL>

<P><STRONG><a name="[25]"></a>noos_start</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, noos_impl.o(.text.noos_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = noos_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_controller
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[8]"></a>on_deep_sleep_wakeup</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(.text.on_deep_sleep_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = on_deep_sleep_wakeup &rArr; setup_peripherals &rArr; config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[d]"></a>on_raw_packet_done</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, time_sync.o(.text.on_raw_packet_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = on_raw_packet_done &rArr; packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_sync.o(.text.internal_time_sync_init)
</UL>
<P><STRONG><a name="[47]"></a>os_impl_get_driver</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, noos_impl.o(.text.os_impl_get_driver))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[6c]"></a>packet_action</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, time_sync.o(.text.packet_action))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_get_us_time
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_raw_packet_set_tx_data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_raw_packet_send
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_raw_packet_done
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_schedule
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[28]"></a>pendsv_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, noos_impl.o(.text.pendsv_isr))
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[61]"></a>print_conn_state</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, profile.o(.text.print_conn_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = print_conn_state
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
</UL>

<P><STRONG><a name="[9]"></a>query_deep_sleep_allowed</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(.text.query_deep_sleep_allowed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = query_deep_sleep_allowed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[46]"></a>setup_peripherals</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, main.o(.text.setup_peripherals))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = setup_peripherals &rArr; config_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer2_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_uart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_comm_uart
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_deep_sleep_wakeup
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[4]"></a>setup_profile</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, profile.o(.text.setup_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = setup_profile &rArr; internal_time_sync_init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_add_event_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_register_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_server_register_packet_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_server_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[7d]"></a>start_notify</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, profile.o(.text.start_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = start_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_characteristic_descriptor_using_descriptor_handle
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_listen_for_characteristic_value_updates
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[27]"></a>svc_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, noos_impl.o(.text.svc_isr))
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[26]"></a>tick_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, noos_impl.o(.text.tick_isr))
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[6a]"></a>timer1_enable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, main.o(.text.timer1_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer1_enable &rArr; TMR_SetCMP
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetCMP
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Reload
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_schedule
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_stop
</UL>

<P><STRONG><a name="[77]"></a>timer1_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, main.o(.text.timer1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer1_init &rArr; TMR_SetOpMode
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetOpMode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntEnable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[e]"></a>timer1_isr</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, main.o(.text.timer1_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = timer1_isr &rArr; internal_time_sync_stop &rArr; timer1_enable &rArr; TMR_SetCMP
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_stop
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_time_sync_schedule
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntClr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.setup_peripherals)
</UL>
<P><STRONG><a name="[78]"></a>timer2_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, main.o(.text.timer2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer2_init &rArr; TMR_SetOpMode
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetOpMode
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Reload
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntEnable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[f]"></a>timer2_isr</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(.text.timer2_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = timer2_isr &rArr; came_sync_callback &rArr; internal_time_sync_schedule &rArr; packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;came_sync_callback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_IntClr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.setup_peripherals)
</UL>
<P><STRONG><a name="[6e]"></a>total_conn_num</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, profile.o(.text.total_conn_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = total_conn_num
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_all_peripheral_connected
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[b]"></a>uart_driver_isr</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, main.o(.text.uart_driver_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uart_driver_isr &rArr; uart_driver_read_data &rArr; came_sync_callback &rArr; internal_time_sync_schedule &rArr; packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_read_data
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Get_all_raw_int_stat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.config_comm_uart)
</UL>
<P><STRONG><a name="[89]"></a>uart_driver_read_data</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, main.o(.text.uart_driver_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uart_driver_read_data &rArr; came_sync_callback &rArr; internal_time_sync_schedule &rArr; packet_action
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;came_sync_callback
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_set_interval
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_send_data
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_RXFIFO_EMPTY
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_isr
</UL>

<P><STRONG><a name="[8b]"></a>uart_driver_send_data</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(.text.uart_driver_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_driver_send_data &rArr; UART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Check_TXFIFO_FULL
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
</UL>

<P><STRONG><a name="[71]"></a>uart_external_send_data</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, profile.o(.text.uart_external_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_external_send_data &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_push_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[14]"></a>write_characteristic_descriptor_callback</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, profile.o(.text.write_characteristic_descriptor_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = write_characteristic_descriptor_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.start_notify)
</UL>
<P><STRONG><a name="[98]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[af]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[b0]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[b1]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[95]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[b2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[22]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[21]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6]"></a>cb_assertion</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, main.o(.text.cb_assertion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_assertion
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[5]"></a>cb_hard_fault</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, main.o(.text.cb_hard_fault))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cb_hard_fault
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[7]"></a>cb_heap_out_of_mem</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, main.o(.text.cb_heap_out_of_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cb_heap_out_of_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.app_main)
</UL>
<P><STRONG><a name="[5a]"></a>config_comm_uart</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, main.o(.text.config_comm_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = config_comm_uart &rArr; apUART_Initialize &rArr; apUART_BaudRateSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_irq_callback
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apUART_Initialize
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ClearClkGateMulti
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SetPadMux
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUartRxdIn
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_peripherals
</UL>

<P><STRONG><a name="[10]"></a>att_read_callback</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, profile.o(.text.att_read_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = att_read_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.setup_profile)
</UL>
<P><STRONG><a name="[11]"></a>att_write_callback</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, profile.o(.text.att_write_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = att_write_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.setup_profile)
</UL>
<P><STRONG><a name="[91]"></a>btstack_event_state_get_state</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.btstack_event_state_get_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = btstack_event_state_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[70]"></a>gatt_event_notification_parse</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, profile.o(.text.gatt_event_notification_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gatt_event_notification_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_notification_handler
</UL>

<P><STRONG><a name="[94]"></a>hci_event_le_meta_get_subevent_code</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.hci_event_le_meta_get_subevent_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hci_event_le_meta_get_subevent_code
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[90]"></a>hci_event_packet_get_type</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.hci_event_packet_get_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hci_event_packet_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[97]"></a>hci_event_packet_get_user_msg</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, profile.o(.text.hci_event_packet_get_user_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = hci_event_packet_get_user_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[13]"></a>output_notification_handler</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, profile.o(.text.output_notification_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = output_notification_handler &rArr; ble_external_send_dev_sync_data &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_external_send_data
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_external_send_dev_sync_data
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_event_notification_parse
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.start_notify)
</UL>
<P><STRONG><a name="[8c]"></a>user_msg_handler</STRONG> (Thumb, 672 bytes, Stack size 56 bytes, profile.o(.text.user_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = user_msg_handler &rArr; initiate_if_needed &rArr; print_conn_state
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packet_action
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_time_sync_schedule
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_update_connection_parameters
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_phy
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_create_connection_cancel
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_came_sync_data
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_application_data
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_driver_send_data
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_packet_handler
</UL>

<P><STRONG><a name="[12]"></a>user_packet_handler</STRONG> (Thumb, 716 bytes, Stack size 104 bytes, profile.o(.text.user_packet_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = user_packet_handler &rArr; user_msg_handler &rArr; initiate_if_needed &rArr; print_conn_state
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;total_conn_num
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_notify
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_set_max_conn_number
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initiate_if_needed
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_is_ready
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_update_connection_parameters
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_random_device_address
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_att_send_time_sync_data
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_msg_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_packet_get_user_msg
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_packet_get_type
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_event_le_meta_get_subevent_code
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btstack_event_state_get_state
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> profile.o(.text.setup_profile)
</UL>
<P><STRONG><a name="[1e]"></a>dummy_event_create</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, noos_impl.o(.text.dummy_event_create))
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[20]"></a>dummy_event_set</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, noos_impl.o(.text.dummy_event_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dummy_event_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[1f]"></a>dummy_event_wait</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, noos_impl.o(.text.dummy_event_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dummy_event_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[23]"></a>enter_critical</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, noos_impl.o(.text.enter_critical))
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[75]"></a>idle_process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, noos_impl.o(.text.idle_process))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_recv_msg
</UL>

<P><STRONG><a name="[24]"></a>leave_critical</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, noos_impl.o(.text.leave_critical))
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[1b]"></a>queue_create</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, noos_impl.o(.text.queue_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = queue_create &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[1d]"></a>queue_recv_msg</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, noos_impl.o(.text.queue_recv_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = queue_recv_msg &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_controller_run
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;idle_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[1c]"></a>queue_send_msg</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, noos_impl.o(.text.queue_send_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = queue_send_msg &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[1a]"></a>task_create</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, noos_impl.o(.text.task_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[86]"></a>timer_cb</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, noos_impl.o(.text.timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_7
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_6
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_5
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_4
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_3
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_2
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_1
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_0
</UL>

<P><STRONG><a name="[29]"></a>timer_cb_0</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_0 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[2a]"></a>timer_cb_1</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_1 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[2b]"></a>timer_cb_2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_2 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[2c]"></a>timer_cb_3</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_3 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[2d]"></a>timer_cb_4</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_4 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[2e]"></a>timer_cb_5</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_5 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[2f]"></a>timer_cb_6</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_6 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[30]"></a>timer_cb_7</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, noos_impl.o(.text.timer_cb_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_cb_7 &rArr; timer_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.data.sw_timers)
</UL>
<P><STRONG><a name="[16]"></a>timer_create</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, noos_impl.o(.text.timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_raise_assertion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[19]"></a>timer_delete</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, noos_impl.o(.text.timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_delete
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[17]"></a>timer_start</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, noos_impl.o(.text.timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[18]"></a>timer_stop</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, noos_impl.o(.text.timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noos_impl.o(.rodata.driver)
</UL>
<P><STRONG><a name="[42]"></a>PINCTRL_SelIn</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, peripheral_pinctrl.o(.text.PINCTRL_SelIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PINCTRL_SelIn
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINCTRL_SelUartRxdIn
</UL>

<P><STRONG><a name="[9a]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[99]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[9d]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[9c]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
